{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let IdGeneratorService = /*#__PURE__*/(() => {\n  class IdGeneratorService {\n    generateEmployeeId(firstName, lastName, middleName) {\n      const now = new Date();\n      const year = now.getFullYear().toString().slice(-2);\n      const month = (now.getMonth() + 1).toString().padStart(2, '0');\n      const day = now.getDate().toString().padStart(2, '0');\n      const datePart = `${year}${month}${day}`;\n      const hours = now.getHours().toString().padStart(2, '0');\n      const minutes = now.getMinutes().toString().padStart(2, '0');\n      const seconds = now.getSeconds().toString().padStart(2, '0');\n      const timePart = `${hours}${minutes}${seconds}`;\n      const firstChar = this.getInitials(firstName, lastName, middleName);\n      const randomPart = Math.floor(Math.random() * 100).toString().padStart(2, '0');\n      return `EMP-${datePart}-${timePart}-${firstChar}-${randomPart}`;\n    }\n    getInitials(firstName, lastName, middleName) {\n      const lastInitial = lastName.charAt(0).toUpperCase();\n      const firstInitial = firstName.charAt(0).toUpperCase();\n      const middleInitial = middleName ? middleName.charAt(0).toUpperCase() : '';\n      return middleInitial ? `${lastInitial}${firstInitial}${middleInitial}` : `${lastInitial}${firstInitial}`;\n    }\n    generateSimpleEmployeeId(firstName, lastName, middleName) {\n      const now = new Date();\n      const datePart = now.getTime().toString(36);\n      const initials = this.getInitials(firstName, lastName, middleName);\n      return `EMP-${initials}-${datePart}`;\n    }\n    isEmployeeIdUnique(employeeId, existingIds) {\n      return !existingIds.includes(employeeId);\n    }\n    static {\n      this.ɵfac = function IdGeneratorService_Factory(t) {\n        return new (t || IdGeneratorService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: IdGeneratorService,\n        factory: IdGeneratorService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return IdGeneratorService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}