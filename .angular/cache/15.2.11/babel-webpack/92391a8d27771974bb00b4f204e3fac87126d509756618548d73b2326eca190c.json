{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class TranslationService {\n  constructor() {\n    this.currentLang = new BehaviorSubject('ru');\n    this.translations = {\n      ru: {\n        'HEADER.TITLE': 'Система управления сотрудниками',\n        'HEADER.SUBTITLE': 'Эффективное управление персоналом',\n        'LOGIN.TITLE': 'Вход в систему',\n        'LOGIN.USERNAME': 'Имя пользователя',\n        'LOGIN.PASSWORD': 'Пароль',\n        'LOGIN.BUTTON': 'Войти',\n        'LOGIN.ERROR': 'Неверные учетные данные',\n        'EMPLOYEE.LIST': 'Список сотрудников',\n        'EMPLOYEE.ADD': 'Добавить сотрудника',\n        'EMPLOYEE.EDIT': 'Редактировать сотрудника',\n        'EMPLOYEE.DELETE': 'Удалить сотрудника',\n        'EMPLOYEE.FIELDS.EMPLOYEE_ID': 'ID сотрудника',\n        'EMPLOYEE.FIELDS.FIRST_NAME': 'Имя',\n        'EMPLOYEE.FIELDS.LAST_NAME': 'Фамилия',\n        'EMPLOYEE.FIELDS.MIDDLE_NAME': 'Отчество',\n        'EMPLOYEE.FIELDS.POSITION': 'Должность',\n        'EMPLOYEE.FIELDS.ADDRESS': 'Адрес',\n        'EMPLOYEE.FIELDS.EMAIL': 'Email',\n        'EMPLOYEE.FIELDS.PHONE': 'Телефон',\n        'EMPLOYEE.FIELDS.SALARY': 'Зарплата',\n        'EMPLOYEE.FIELDS.ACTIONS': 'Действия',\n        'POSITION.MANAGE': 'Управление должностями',\n        'POSITION.ADD': 'Добавить должность',\n        'POSITION.DELETE': 'Удалить должность',\n        'FILTERS.SORT_BY': 'Сортировать по',\n        'FILTERS.LAST_NAME': 'Фамилия',\n        'FILTERS.POSITION': 'Должность',\n        'FILTERS.FILTER_BY_POSITION': 'Фильтровать по должности',\n        'ACTIONS.SAVE': 'Сохранить',\n        'ACTIONS.CANCEL': 'Отмена',\n        'ACTIONS.DELETE': 'Удалить',\n        'ACTIONS.EDIT': 'Редактировать',\n        'ACTIONS.CONFIRM_DELETE': 'Вы уверены, что хотите удалить?',\n        'NAVIGATION.EMPLOYEES': 'Сотрудники',\n        'NAVIGATION.ADMIN': 'Администрирование',\n        'NAVIGATION.LOGOUT': 'Выйти',\n        'VALIDATORS.REQUIRED': 'Это поле обязательно для заполнения',\n        'VALIDATORS.EMAIL': 'Введите корректный email адрес',\n        'VALIDATORS.MINLENGTH': 'Минимальная длина (в символах): ',\n        'VALIDATORS.MAXLENGTH': 'Максимальная длина (в символах): ',\n        'VALIDATORS.MIN': 'Значение должно быть не менее ',\n        'VALIDATORS.MAX': 'Значение должно быть не более ',\n        'VALIDATORS.PHONEFORMAT': 'Неверный формат номера телефона. Допустимые форматы: 111111, +375(11)1111111, +7(111)1111111',\n        'VALIDATORS.INVALIDNAME': 'Имя может содержать только буквы, пробелы и дефисы'\n      },\n      en: {\n        'HEADER.TITLE': 'Employee Management System',\n        'HEADER.SUBTITLE': 'Efficient personnel management',\n        'LOGIN.TITLE': 'Login',\n        'LOGIN.USERNAME': 'Username',\n        'LOGIN.PASSWORD': 'Password',\n        'LOGIN.BUTTON': 'Login',\n        'LOGIN.ERROR': 'Invalid credentials',\n        'EMPLOYEE.LIST': 'Employee List',\n        'EMPLOYEE.ADD': 'Add Employee',\n        'EMPLOYEE.EDIT': 'Edit Employee',\n        'EMPLOYEE.DELETE': 'Delete Employee',\n        'EMPLOYEE.FIELDS.EMPLOYEE_ID': 'Employee ID',\n        'EMPLOYEE.FIELDS.FIRST_NAME': 'First Name',\n        'EMPLOYEE.FIELDS.LAST_NAME': 'Last Name',\n        'EMPLOYEE.FIELDS.MIDDLE_NAME': 'Middle Name',\n        'EMPLOYEE.FIELDS.POSITION': 'Position',\n        'EMPLOYEE.FIELDS.ADDRESS': 'Address',\n        'EMPLOYEE.FIELDS.EMAIL': 'Email',\n        'EMPLOYEE.FIELDS.PHONE': 'Phone',\n        'EMPLOYEE.FIELDS.SALARY': 'Salary',\n        'EMPLOYEE.FIELDS.ACTIONS': 'Actions',\n        'POSITION.MANAGE': 'Manage Positions',\n        'POSITION.ADD': 'Add Position',\n        'POSITION.DELETE': 'Delete Position',\n        'FILTERS.SORT_BY': 'Sort by',\n        'FILTERS.LAST_NAME': 'Last Name',\n        'FILTERS.POSITION': 'Position',\n        'FILTERS.FILTER_BY_POSITION': 'Filter by position',\n        'ACTIONS.SAVE': 'Save',\n        'ACTIONS.CANCEL': 'Cancel',\n        'ACTIONS.DELETE': 'Delete',\n        'ACTIONS.EDIT': 'Edit',\n        'ACTIONS.CONFIRM_DELETE': 'Are you sure you want to delete?',\n        'NAVIGATION.EMPLOYEES': 'Employees',\n        'NAVIGATION.ADMIN': 'Administration',\n        'NAVIGATION.LOGOUT': 'Logout',\n        'VALIDATORS.REQUIRED': 'This field is required',\n        'VALIDATORS.EMAIL': 'Enter a valid email address',\n        'VALIDATORS.MINLENGTH': 'Minimal length (in symbols): ',\n        'VALIDATORS.MAXLENGTH': 'Maximum length (in symbols): ',\n        'VALIDATORS.MIN': 'There should be at least ',\n        'VALIDATORS.MAX': 'There should be no more than ',\n        'VALIDATORS.PHONEFORMAT': 'Invalid phone number. Valid examples: 111111, +375(11)1111111, +7(111)1111111',\n        'VALIDATORS.INVALIDNAME': 'The name should contain only letters, spaces and dashes'\n      }\n    };\n  }\n  translate(key) {\n    const translation = this.translations[this.currentLang.value]?.[key];\n    return translation || key;\n  }\n  setLanguage(lang) {\n    if (this.translations[lang]) {\n      this.currentLang.next(lang);\n    }\n  }\n  getCurrentLang() {\n    return this.currentLang.value;\n  }\n  getLanguageObservable() {\n    return this.currentLang.asObservable();\n  }\n  static {\n    this.ɵfac = function TranslationService_Factory(t) {\n      return new (t || TranslationService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TranslationService,\n      factory: TranslationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","TranslationService","constructor","currentLang","translations","ru","en","translate","key","translation","value","setLanguage","lang","next","getCurrentLang","getLanguageObservable","asObservable","factory","ɵfac","providedIn"],"sources":["D:\\employee-management\\src\\app\\shared\\services\\translation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n\r\ninterface Translations {\r\n  [key: string]: {\r\n    [key: string]: string;\r\n  };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslationService {\r\n  private currentLang = new BehaviorSubject<string>('ru');\r\n  \r\n  private translations: Translations = {\r\n    ru: {\r\n      'HEADER.TITLE': 'Система управления сотрудниками',\r\n      'HEADER.SUBTITLE': 'Эффективное управление персоналом',\r\n      'LOGIN.TITLE': 'Вход в систему',\r\n      'LOGIN.USERNAME': 'Имя пользователя',\r\n      'LOGIN.PASSWORD': 'Пароль',\r\n      'LOGIN.BUTTON': 'Войти',\r\n      'LOGIN.ERROR': 'Неверные учетные данные',\r\n      'EMPLOYEE.LIST': 'Список сотрудников',\r\n      'EMPLOYEE.ADD': 'Добавить сотрудника',\r\n      'EMPLOYEE.EDIT': 'Редактировать сотрудника',\r\n      'EMPLOYEE.DELETE': 'Удалить сотрудника',\r\n      'EMPLOYEE.FIELDS.EMPLOYEE_ID': 'ID сотрудника',\r\n      'EMPLOYEE.FIELDS.FIRST_NAME': 'Имя',\r\n      'EMPLOYEE.FIELDS.LAST_NAME': 'Фамилия',\r\n      'EMPLOYEE.FIELDS.MIDDLE_NAME': 'Отчество',\r\n      'EMPLOYEE.FIELDS.POSITION': 'Должность',\r\n      'EMPLOYEE.FIELDS.ADDRESS': 'Адрес',\r\n      'EMPLOYEE.FIELDS.EMAIL': 'Email',\r\n      'EMPLOYEE.FIELDS.PHONE': 'Телефон',\r\n      'EMPLOYEE.FIELDS.SALARY': 'Зарплата',\r\n      'EMPLOYEE.FIELDS.ACTIONS': 'Действия',\r\n      'POSITION.MANAGE': 'Управление должностями',\r\n      'POSITION.ADD': 'Добавить должность',\r\n      'POSITION.DELETE': 'Удалить должность',\r\n      'FILTERS.SORT_BY': 'Сортировать по',\r\n      'FILTERS.LAST_NAME': 'Фамилия',\r\n      'FILTERS.POSITION': 'Должность',\r\n      'FILTERS.FILTER_BY_POSITION': 'Фильтровать по должности',\r\n      'ACTIONS.SAVE': 'Сохранить',\r\n      'ACTIONS.CANCEL': 'Отмена',\r\n      'ACTIONS.DELETE': 'Удалить',\r\n      'ACTIONS.EDIT': 'Редактировать',\r\n      'ACTIONS.CONFIRM_DELETE': 'Вы уверены, что хотите удалить?',\r\n      'NAVIGATION.EMPLOYEES': 'Сотрудники',\r\n      'NAVIGATION.ADMIN': 'Администрирование',\r\n      'NAVIGATION.LOGOUT': 'Выйти',\r\n      'VALIDATORS.REQUIRED': 'Это поле обязательно для заполнения',\r\n      'VALIDATORS.EMAIL': 'Введите корректный email адрес',\r\n      'VALIDATORS.MINLENGTH': 'Минимальная длина (в символах): ',\r\n      'VALIDATORS.MAXLENGTH': 'Максимальная длина (в символах): ',\r\n      'VALIDATORS.MIN': 'Значение должно быть не менее ',\r\n      'VALIDATORS.MAX': 'Значение должно быть не более ',\r\n      'VALIDATORS.PHONEFORMAT': 'Неверный формат номера телефона. Допустимые форматы: 111111, +375(11)1111111, +7(111)1111111',\r\n      'VALIDATORS.INVALIDNAME': 'Имя может содержать только буквы, пробелы и дефисы'\r\n    },\r\n    en: {\r\n      'HEADER.TITLE': 'Employee Management System',\r\n      'HEADER.SUBTITLE': 'Efficient personnel management',\r\n      'LOGIN.TITLE': 'Login',\r\n      'LOGIN.USERNAME': 'Username',\r\n      'LOGIN.PASSWORD': 'Password',\r\n      'LOGIN.BUTTON': 'Login',\r\n      'LOGIN.ERROR': 'Invalid credentials',\r\n      'EMPLOYEE.LIST': 'Employee List',\r\n      'EMPLOYEE.ADD': 'Add Employee',\r\n      'EMPLOYEE.EDIT': 'Edit Employee',\r\n      'EMPLOYEE.DELETE': 'Delete Employee',\r\n      'EMPLOYEE.FIELDS.EMPLOYEE_ID': 'Employee ID',\r\n      'EMPLOYEE.FIELDS.FIRST_NAME': 'First Name',\r\n      'EMPLOYEE.FIELDS.LAST_NAME': 'Last Name',\r\n      'EMPLOYEE.FIELDS.MIDDLE_NAME': 'Middle Name',\r\n      'EMPLOYEE.FIELDS.POSITION': 'Position',\r\n      'EMPLOYEE.FIELDS.ADDRESS': 'Address',\r\n      'EMPLOYEE.FIELDS.EMAIL': 'Email',\r\n      'EMPLOYEE.FIELDS.PHONE': 'Phone',\r\n      'EMPLOYEE.FIELDS.SALARY': 'Salary',\r\n      'EMPLOYEE.FIELDS.ACTIONS': 'Actions',\r\n      'POSITION.MANAGE': 'Manage Positions',\r\n      'POSITION.ADD': 'Add Position',\r\n      'POSITION.DELETE': 'Delete Position',\r\n      'FILTERS.SORT_BY': 'Sort by',\r\n      'FILTERS.LAST_NAME': 'Last Name',\r\n      'FILTERS.POSITION': 'Position',\r\n      'FILTERS.FILTER_BY_POSITION': 'Filter by position',\r\n      'ACTIONS.SAVE': 'Save',\r\n      'ACTIONS.CANCEL': 'Cancel',\r\n      'ACTIONS.DELETE': 'Delete',\r\n      'ACTIONS.EDIT': 'Edit',\r\n      'ACTIONS.CONFIRM_DELETE': 'Are you sure you want to delete?',\r\n      'NAVIGATION.EMPLOYEES': 'Employees',\r\n      'NAVIGATION.ADMIN': 'Administration',\r\n      'NAVIGATION.LOGOUT': 'Logout',\r\n      'VALIDATORS.REQUIRED': 'This field is required',\r\n      'VALIDATORS.EMAIL': 'Enter a valid email address',\r\n      'VALIDATORS.MINLENGTH': 'Minimal length (in symbols): ',\r\n      'VALIDATORS.MAXLENGTH': 'Maximum length (in symbols): ',\r\n      'VALIDATORS.MIN': 'There should be at least ',\r\n      'VALIDATORS.MAX': 'There should be no more than ',\r\n      'VALIDATORS.PHONEFORMAT': 'Invalid phone number. Valid examples: 111111, +375(11)1111111, +7(111)1111111',\r\n      'VALIDATORS.INVALIDNAME': 'The name should contain only letters, spaces and dashes'\r\n    }\r\n  };\r\n\r\n  public translate(key: string): string {\r\n    const translation = this.translations[this.currentLang.value]?.[key];\r\n    return translation || key;\r\n  }\r\n\r\n  public setLanguage(lang: string): void {\r\n    if (this.translations[lang]) {\r\n      this.currentLang.next(lang);\r\n    }\r\n  }\r\n\r\n  public getCurrentLang(): string {\r\n    return this.currentLang.value;\r\n  }\r\n\r\n  public getLanguageObservable() {\r\n    return this.currentLang.asObservable();\r\n  }\r\n}\r\n/*\r\ninterface TranslationDictionary {\r\n  [key: string]: string | TranslationDictionary;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslationService {\r\n  private currentLang = new BehaviorSubject<string>('ru');\r\n  private translations: { [lang: string]: TranslationDictionary } = {\r\n    ru: {},\r\n    en: {}\r\n  };\r\n  private translationsLoaded = false;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.loadTranslations();\r\n  }\r\n\r\n  private loadTranslations(): void {\r\n    this.loadLanguage('ru').subscribe();\r\n    this.loadLanguage('en').subscribe();\r\n  }\r\n\r\n  private loadLanguage(lang: string): Observable<void> {\r\n    return this.http.get<TranslationDictionary>(`/assets/i18n/${lang}.json`).pipe(\r\n      tap(translation => {\r\n        this.translations[lang] = translation;\r\n        console.log(`✅ Translations loaded for ${lang}:`, translation);\r\n      }),\r\n      map(() => {})\r\n    );\r\n  }\r\n\r\n  setLanguage(lang: string): void {\r\n    if (this.translations[lang]) {\r\n      this.currentLang.next(lang);\r\n      console.log(`🌐 Language changed to: ${lang}`);\r\n    } else {\r\n      console.warn(`⚠️ Language ${lang} not found in translations`);\r\n    }\r\n  }\r\n\r\n  getCurrentLang(): string {\r\n    return this.currentLang.value;\r\n  }\r\n\r\n  translate(key: string): string {\r\n    const keys = key.split('.');\r\n    let translation: string | TranslationDictionary = this.translations[this.currentLang.value];\r\n\r\n    // Если переводы еще не загружены, возвращаем ключ\r\n    if (!translation || Object.keys(translation).length === 0) {\r\n      console.warn(`⚠️ Translations not loaded yet for key: ${key}`);\r\n      return key;\r\n    }\r\n\r\n    for (const k of keys) {\r\n      if (translation && typeof translation === 'object' && k in translation) {\r\n        translation = translation[k];\r\n      } else {\r\n        console.warn(`⚠️ Translation not found for key: ${key}`);\r\n        return key; // Возвращаем ключ, если перевод не найден\r\n      }\r\n    }\r\n\r\n    return typeof translation === 'string' ? translation : key;\r\n  }\r\n\r\n  getLanguageObservable(): Observable<string> {\r\n    return this.currentLang.asObservable();\r\n  }\r\n\r\n  // Метод для проверки загрузки переводов\r\n  areTranslationsLoaded(): boolean {\r\n    return Object.keys(this.translations['ru']).length > 0 && \r\n           Object.keys(this.translations['en']).length > 0;\r\n  }\r\n}*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}