{"ast":null,"code":"import { BehaviorSubject, Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ModalService = /*#__PURE__*/(() => {\n  class ModalService {\n    constructor() {\n      this.modalSubject = new BehaviorSubject(null);\n    }\n    showAlert(title, message) {\n      return new Observable(observer => {\n        this.modalSubject.next({\n          config: {\n            title,\n            message,\n            type: 'alert',\n            confirmText: 'OK'\n          },\n          callback: result => {\n            observer.next();\n            observer.complete();\n          }\n        });\n      });\n    }\n    showConfirm(title, message, confirmText = 'Да', cancelText = 'Отмена') {\n      return new Observable(observer => {\n        this.modalSubject.next({\n          config: {\n            title,\n            message,\n            type: 'confirm',\n            confirmText,\n            cancelText\n          },\n          callback: result => {\n            observer.next(result.confirmed);\n            observer.complete();\n          }\n        });\n      });\n    }\n    getModal() {\n      return this.modalSubject.asObservable();\n    }\n    closeModal(result) {\n      this.modalSubject.next(null);\n    }\n    static {\n      this.ɵfac = function ModalService_Factory(t) {\n        return new (t || ModalService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ModalService,\n        factory: ModalService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ModalService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}