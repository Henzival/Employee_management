{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let TranslationService = /*#__PURE__*/(() => {\n  var _TranslationService;\n  class TranslationService {\n    constructor() {\n      this.currentLang = new BehaviorSubject('ru');\n      this.translations = {\n        ru: {\n          'HEADER.TITLE': 'Система управления сотрудниками',\n          'HEADER.SUBTITLE': 'Эффективное управление персоналом',\n          'LOGIN.TITLE': 'Вход в систему',\n          'LOGIN.USERNAME': 'Имя пользователя',\n          'LOGIN.PASSWORD': 'Пароль',\n          'LOGIN.BUTTON': 'Войти',\n          'LOGIN.ERROR': 'Неверные учетные данные',\n          'EMPLOYEE.LIST': 'Список сотрудников',\n          'EMPLOYEE.ADD': 'Добавить сотрудника',\n          'EMPLOYEE.EDIT': 'Редактировать сотрудника',\n          'EMPLOYEE.DELETE': 'Удалить сотрудника',\n          'EMPLOYEE.FIELDS.EMPLOYEE_ID': 'ID сотрудника',\n          'EMPLOYEE.FIELDS.FIRST_NAME': 'Имя',\n          'EMPLOYEE.FIELDS.LAST_NAME': 'Фамилия',\n          'EMPLOYEE.FIELDS.MIDDLE_NAME': 'Отчество',\n          'EMPLOYEE.FIELDS.POSITION': 'Должность',\n          'EMPLOYEE.FIELDS.ADDRESS': 'Адрес',\n          'EMPLOYEE.FIELDS.EMAIL': 'Email',\n          'EMPLOYEE.FIELDS.PHONE': 'Телефон',\n          'EMPLOYEE.FIELDS.SALARY': 'Зарплата',\n          'POSITION.MANAGE': 'Управление должностями',\n          'POSITION.ADD': 'Добавить должность',\n          'POSITION.DELETE': 'Удалить должность',\n          'FILTERS.SORT_BY': 'Сортировать по',\n          'FILTERS.LAST_NAME': 'Фамилия',\n          'FILTERS.POSITION': 'Должность',\n          'FILTERS.FILTER_BY_POSITION': 'Фильтровать по должности',\n          'ACTIONS.SAVE': 'Сохранить',\n          'ACTIONS.CANCEL': 'Отмена',\n          'ACTIONS.DELETE': 'Удалить',\n          'ACTIONS.EDIT': 'Редактировать',\n          'ACTIONS.CONFIRM_DELETE': 'Вы уверены, что хотите удалить?',\n          'NAVIGATION.EMPLOYEES': 'Сотрудники',\n          'NAVIGATION.ADMIN': 'Администрирование',\n          'NAVIGATION.LOGOUT': 'Выйти'\n        },\n        en: {\n          'HEADER.TITLE': 'Employee Management System',\n          'HEADER.SUBTITLE': 'Efficient personnel management',\n          'LOGIN.TITLE': 'Login',\n          'LOGIN.USERNAME': 'Username',\n          'LOGIN.PASSWORD': 'Password',\n          'LOGIN.BUTTON': 'Login',\n          'LOGIN.ERROR': 'Invalid credentials',\n          'EMPLOYEE.LIST': 'Employee List',\n          'EMPLOYEE.ADD': 'Add Employee',\n          'EMPLOYEE.EDIT': 'Edit Employee',\n          'EMPLOYEE.DELETE': 'Delete Employee',\n          'EMPLOYEE.FIELDS.EMPLOYEE_ID': 'Employee ID',\n          'EMPLOYEE.FIELDS.FIRST_NAME': 'First Name',\n          'EMPLOYEE.FIELDS.LAST_NAME': 'Last Name',\n          'EMPLOYEE.FIELDS.MIDDLE_NAME': 'Middle Name',\n          'EMPLOYEE.FIELDS.POSITION': 'Position',\n          'EMPLOYEE.FIELDS.ADDRESS': 'Address',\n          'EMPLOYEE.FIELDS.EMAIL': 'Email',\n          'EMPLOYEE.FIELDS.PHONE': 'Phone',\n          'EMPLOYEE.FIELDS.SALARY': 'Salary',\n          'POSITION.MANAGE': 'Manage Positions',\n          'POSITION.ADD': 'Add Position',\n          'POSITION.DELETE': 'Delete Position',\n          'FILTERS.SORT_BY': 'Sort by',\n          'FILTERS.LAST_NAME': 'Last Name',\n          'FILTERS.POSITION': 'Position',\n          'FILTERS.FILTER_BY_POSITION': 'Filter by position',\n          'ACTIONS.SAVE': 'Save',\n          'ACTIONS.CANCEL': 'Cancel',\n          'ACTIONS.DELETE': 'Delete',\n          'ACTIONS.EDIT': 'Edit',\n          'ACTIONS.CONFIRM_DELETE': 'Are you sure you want to delete?',\n          'NAVIGATION.EMPLOYEES': 'Employees',\n          'NAVIGATION.ADMIN': 'Administration',\n          'NAVIGATION.LOGOUT': 'Logout'\n        }\n      };\n    }\n    translate(key) {\n      var _this$translations$th;\n      const translation = (_this$translations$th = this.translations[this.currentLang.value]) === null || _this$translations$th === void 0 ? void 0 : _this$translations$th[key];\n      return translation || key;\n    }\n    setLanguage(lang) {\n      if (this.translations[lang]) {\n        this.currentLang.next(lang);\n      }\n    }\n    getCurrentLang() {\n      return this.currentLang.value;\n    }\n    getLanguageObservable() {\n      return this.currentLang.asObservable();\n    }\n  }\n  _TranslationService = TranslationService;\n  _TranslationService.ɵfac = function TranslationService_Factory(t) {\n    return new (t || _TranslationService)();\n  };\n  _TranslationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _TranslationService,\n    factory: _TranslationService.ɵfac,\n    providedIn: 'root'\n  });\n  return TranslationService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}