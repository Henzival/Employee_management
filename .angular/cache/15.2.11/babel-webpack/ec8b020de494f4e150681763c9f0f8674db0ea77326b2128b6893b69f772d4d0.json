{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UntilDestroy } from '@ngneat/until-destroy';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../shared/services/translation.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵelement(1, \"i\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction LoginComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.translationService.translate(\"VALIDATORS.REQUIRED\"), \" \");\n  }\n}\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, LoginComponent_div_12_div_1_Template, 2, 1, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.username == null ? null : ctx_r1.username.errors == null ? null : ctx_r1.username.errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.translationService.translate(\"VALIDATORS.REQUIRED\"), \" \");\n  }\n}\nfunction LoginComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, LoginComponent_div_19_div_1_Template, 2, 1, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password == null ? null : ctx_r2.password.errors == null ? null : ctx_r2.password.errors[\"required\"]);\n  }\n}\nfunction LoginComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelement(1, \"i\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.translationService.translate(\"LOGIN.BUTTON\"), \" \");\n  }\n}\nfunction LoginComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵelement(1, \"div\", 28);\n    i0.ɵɵtext(2, \" \\u0412\\u0445\\u043E\\u0434 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443... \");\n    i0.ɵɵelementEnd();\n  }\n}\nlet LoginComponent = class LoginComponent {\n  constructor(authService, router, translationService) {\n    this.authService = authService;\n    this.router = router;\n    this.translationService = translationService;\n    this.errorMessage = '';\n    this.isLoading = false;\n    this.translationsLoaded = false;\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      password: new FormControl('', [Validators.required, Validators.minLength(4)])\n    });\n    this.translationsSubscription = this.translationService.getTranslationsLoadedObservable().subscribe(loaded => {\n      this.translationsLoaded = loaded;\n      if (loaded) {\n        console.log('Translations loaded in login component');\n      }\n    });\n  }\n  ngOnInit() {\n    // Автоматический вход, если есть валидная сессия\n    if (this.authService.autoLogin()) {\n      this.router.navigate(['/admin']);\n      return;\n    }\n    setTimeout(() => {\n      const usernameField = document.getElementById('username');\n      if (usernameField) {\n        usernameField.focus();\n      }\n    }, 100);\n  }\n  ngOnDestroy() {\n    if (this.translationsSubscription) {\n      this.translationsSubscription.unsubscribe();\n    }\n  }\n  get username() {\n    return this.loginForm.get('username');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  login() {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = '';\n      const {\n        username,\n        password\n      } = this.loginForm.value;\n      // Используем синхронный метод вместо Observable\n      const result = this.authService.login(username, password);\n      if (result.success) {\n        this.isLoading = false;\n        console.log('Login successful, navigating to admin');\n        this.router.navigate(['/admin']);\n      } else {\n        this.isLoading = false;\n        this.errorMessage = result.error || this.translationService.translate('LOGIN.ERROR');\n        console.error('Login error:', result.error);\n        this.loginForm.patchValue({\n          password: ''\n        });\n        // Фокусируемся на поле с ошибкой\n        setTimeout(() => {\n          if (this.username?.invalid) {\n            document.getElementById('username')?.focus();\n          } else {\n            document.getElementById('password')?.focus();\n          }\n        }, 100);\n      }\n    } else {\n      this.loginForm.markAllAsTouched();\n      this.errorMessage = 'Пожалуйста, заполните все поля корректно';\n      // Фокусируемся на первом невалидном поле\n      setTimeout(() => {\n        if (this.username?.invalid) {\n          document.getElementById('username')?.focus();\n        } else if (this.password?.invalid) {\n          document.getElementById('password')?.focus();\n        }\n      }, 100);\n    }\n  }\n  cancel() {\n    this.router.navigate(['/employees']);\n  }\n  clearForm() {\n    this.loginForm.reset();\n    this.errorMessage = '';\n    // Фокусируемся на поле username после очистки\n    setTimeout(() => {\n      document.getElementById('username')?.focus();\n    }, 100);\n  }\n  // Демо вход для тестирования\n  demoLogin() {\n    this.loginForm.patchValue({\n      username: 'admin',\n      password: 'password'\n    });\n    // Автоматически отправляем форму через короткую задержку\n    setTimeout(() => {\n      this.login();\n    }, 300);\n  }\n  // Показать/скрыть пароль\n  togglePasswordVisibility() {\n    const passwordInput = document.getElementById('password');\n    if (passwordInput) {\n      passwordInput.type = passwordInput.type === 'password' ? 'text' : 'password';\n    }\n  }\n  // Обработка нажатия Enter\n  onKeyPress(event) {\n    if (event.key === 'Enter' && this.loginForm.valid) {\n      this.login();\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TranslationService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 28,\n      vars: 20,\n      consts: [[1, \"login-container\"], [1, \"login-form\"], [1, \"login-header\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"login-form-content\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\", 1, \"form-label\"], [1, \"icon-user\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", \"autocomplete\", \"username\", 1, \"form-input\", 3, \"keypress\"], [\"class\", \"validation-error\", \"id\", \"username-error\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [1, \"icon-lock\"], [1, \"password-container\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"autocomplete\", \"current-password\", 1, \"form-input\", \"password-input\", 3, \"keypress\"], [\"class\", \"validation-error\", \"id\", \"password-error\", 4, \"ngIf\"], [1, \"form-actions\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-login\", 3, \"disabled\"], [4, \"ngIf\"], [\"class\", \"loading-text\", 4, \"ngIf\"], [1, \"secondary-actions\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-cancel\", 3, \"disabled\", \"click\"], [1, \"icon-cancel\"], [1, \"error-message\"], [1, \"icon-error\"], [\"id\", \"username-error\", 1, \"validation-error\"], [\"id\", \"password-error\", 1, \"validation-error\"], [1, \"icon-login\"], [1, \"loading-text\"], [1, \"spinner\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(5, LoginComponent_div_5_Template, 3, 1, \"div\", 3);\n          i0.ɵɵelementStart(6, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n          i0.ɵɵelement(9, \"i\", 7);\n          i0.ɵɵtext(10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 8);\n          i0.ɵɵlistener(\"keypress\", function LoginComponent_Template_input_keypress_11_listener($event) {\n            return ctx.onKeyPress($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 10);\n          i0.ɵɵelement(15, \"i\", 11);\n          i0.ɵɵtext(16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 12)(18, \"input\", 13);\n          i0.ɵɵlistener(\"keypress\", function LoginComponent_Template_input_keypress_18_listener($event) {\n            return ctx.onKeyPress($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(19, LoginComponent_div_19_Template, 2, 1, \"div\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 15)(21, \"button\", 16);\n          i0.ɵɵtemplate(22, LoginComponent_span_22_Template, 3, 1, \"span\", 17);\n          i0.ɵɵtemplate(23, LoginComponent_span_23_Template, 3, 0, \"span\", 18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"div\", 19)(25, \"button\", 20);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_25_listener() {\n            return ctx.cancel();\n          });\n          i0.ɵɵelement(26, \"i\", 21);\n          i0.ɵɵtext(27);\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.translationService.translate(\"LOGIN.TITLE\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.translationService.translate(\"LOGIN.USERNAME\"), \" \");\n          i0.ɵɵadvance(1);\n          i0.ɵɵclassProp(\"error\", (ctx.username == null ? null : ctx.username.invalid) && (ctx.username == null ? null : ctx.username.touched));\n          i0.ɵɵattribute(\"aria-describedby\", (ctx.username == null ? null : ctx.username.invalid) ? \"username-error\" : null);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.username == null ? null : ctx.username.invalid) && (ctx.username == null ? null : ctx.username.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.translationService.translate(\"LOGIN.PASSWORD\"), \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"error\", (ctx.password == null ? null : ctx.password.invalid) && (ctx.password == null ? null : ctx.password.touched));\n          i0.ɵɵattribute(\"aria-describedby\", (ctx.password == null ? null : ctx.password.invalid) ? \"password-error\" : null);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.invalid) && (ctx.password == null ? null : ctx.password.touched));\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"loading\", ctx.isLoading);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid || ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.translationService.translate(\"ACTIONS.CANCEL\"), \" \");\n        }\n      },\n      dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n      styles: [\".login-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]{background:#FFFFFF;padding:1.8rem;border-radius:8px;box-shadow:0 10px 25px #0003;width:100%;max-width:600px;border:1px solid #e1e7f9}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:1.3rem;color:#1e3a8a;font-size:1.8rem}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#ef4444;text-align:center;margin-bottom:.9rem;padding:.5rem;background:white;border-radius:8px;border:1px solid #EF4444;font-weight:500}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{margin-bottom:1.3rem}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .form-label[_ngcontent-%COMP%]{display:block;margin-bottom:.25rem;font-weight:600;color:#1e3a8a;font-size:.95rem}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .form-input[_ngcontent-%COMP%]{width:100%;padding:.9rem;border:2px solid #b8c6ef;border-radius:8px;font-size:1rem;transition:all .3s ease;background:#FFFFFF}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .form-input[_ngcontent-%COMP%]:focus{outline:none;border-color:#1e3a8a;box-shadow:0 0 0 3px #1e3a8a1a;background:white}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .form-input.error[_ngcontent-%COMP%]{border-color:#ef4444;background:white}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .form-input[_ngcontent-%COMP%]:disabled{background:white;cursor:not-allowed}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .validation-error[_ngcontent-%COMP%]{color:#ef4444;font-size:.85rem;margin-top:.25rem;font-weight:500}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]{display:flex;gap:.9rem;margin-top:1.8rem}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{flex:1}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]   .btn.btn-login[_ngcontent-%COMP%]{background:#1E3A8A;color:#fff;font-weight:600}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]   .btn.btn-login[_ngcontent-%COMP%]:hover:not(:disabled){background:#152860;transform:translateY(-2px)}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]   .btn.btn-login[_ngcontent-%COMP%]:disabled{background:#6483dd;cursor:not-allowed;transform:none}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]   .btn.btn-secondary[_ngcontent-%COMP%]{background:#e1e7f9;color:#1e3a8a;border:1px solid #8ea5e6}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]   .btn.btn-secondary[_ngcontent-%COMP%]:hover:not(:disabled){background:#b8c6ef}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .login-form-content[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]   .loading-text[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;gap:.25rem}@media (max-width: 768px){.login-container[_ngcontent-%COMP%]{padding:.9rem}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]{padding:1.3rem}.login-container[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]   .form-actions[_ngcontent-%COMP%]{flex-direction:column}}\"]\n    });\n  }\n};\nLoginComponent = __decorate([UntilDestroy()], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}